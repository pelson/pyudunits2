# Generated by ANTLR 4.11.1
from pyudunits2._grammar._antlr4_runtime import *

if __name__ is not None and "." in __name__:
    from .udunits2Parser import udunits2Parser
else:
    from udunits2Parser import udunits2Parser

# This class defines a complete generic visitor for a parse tree produced by udunits2Parser.


class udunits2ParserVisitor(ParseTreeVisitor):
    # Visit a parse tree produced by udunits2Parser#unit_spec.
    def visitUnit_spec(self, ctx: udunits2Parser.Unit_specContext):
        return self.visitChildren(ctx)

    # Visit a parse tree produced by udunits2Parser#shift_spec.
    def visitShift_spec(self, ctx: udunits2Parser.Shift_specContext):
        return self.visitChildren(ctx)

    # Visit a parse tree produced by udunits2Parser#product.
    def visitProduct(self, ctx: udunits2Parser.ProductContext):
        return self.visitChildren(ctx)

    # Visit a parse tree produced by udunits2Parser#power.
    def visitPower(self, ctx: udunits2Parser.PowerContext):
        return self.visitChildren(ctx)

    # Visit a parse tree produced by udunits2Parser#logarithm.
    def visitLogarithm(self, ctx: udunits2Parser.LogarithmContext):
        return self.visitChildren(ctx)

    # Visit a parse tree produced by udunits2Parser#basic_spec.
    def visitBasic_spec(self, ctx: udunits2Parser.Basic_specContext):
        return self.visitChildren(ctx)

    # Visit a parse tree produced by udunits2Parser#integer.
    def visitInteger(self, ctx: udunits2Parser.IntegerContext):
        return self.visitChildren(ctx)

    # Visit a parse tree produced by udunits2Parser#number.
    def visitNumber(self, ctx: udunits2Parser.NumberContext):
        return self.visitChildren(ctx)

    # Visit a parse tree produced by udunits2Parser#timestamp.
    def visitTimestamp(self, ctx: udunits2Parser.TimestampContext):
        return self.visitChildren(ctx)


del udunits2Parser
